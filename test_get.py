from consumir_api import *

# Mensajes de error...
msg_error_val = "ERROR: Se debe ingresar un número entero válido."
msg_error_zero = "ERROR: Se debe ingresar un número entero mayor a cero."


# Valor input : 1353647483958953583 (Entero 19 dígitos)
# Resultado esperado : Devuelve OK secuencia correspondiente...
def test_method_1():
	valor = 1353647483958953583
	comparar_seq = "1353647483958953583,4060942451876860750,2030471225938430464,1015235612969215232,507617806484607616,253808903242303808,126904451621151904,63452225810575952,31726112905287976,15863056452643988,7931528226321994,3965764113160997,11897292339482992,5948646169741496,2974323084870748,1487161542435374,743580771217687,2230742313653062,1115371156826531,3346113470479594,1673056735239797,5019170205719392,2509585102859696,1254792551429848,627396275714924,313698137857462,156849068928731,470547206786194,235273603393097,705820810179292,352910405089646,176455202544823,529365607634470,264682803817235,794048411451706,397024205725853,1191072617177560,595536308588780,297768154294390,148884077147195,446652231441586,223326115720793,669978347162380,334989173581190,167494586790595,502483760371786,251241880185893,753725640557680,376862820278840,188431410139420,94215705069710,47107852534855,141323557604566,70661778802283,211985336406850,105992668203425,317978004610276,158989002305138,79494501152569,238483503457708,119241751728854,59620875864427,178862627593282,89431313796641,268293941389924,134146970694962,67073485347481,201220456042444,100610228021222,50305114010611,150915342031834,75457671015917,226373013047752,113186506523876,56593253261938,28296626630969,84889879892908,42444939946454,21222469973227,63667409919682,31833704959841,95501114879524,47750557439762,23875278719881,71625836159644,35812918079822,17906459039911,53719377119734,26859688559867,80579065679602,40289532839801,120868598519404,60434299259702,30217149629851,90651448889554,45325724444777,135977173334332,67988586667166,33994293333583,101982880000750,50991440000375,152974320001126,76487160000563,229461480001690,114730740000845,344192220002536,172096110001268,86048055000634,43024027500317,129072082500952,64536041250476,32268020625238,16134010312619,48402030937858,24201015468929,72603046406788,36301523203394,18150761601697,54452284805092,27226142402546,13613071201273,40839213603820,20419606801910,10209803400955,30629410202866,15314705101433,45944115304300,22972057652150,11486028826075,34458086478226,17229043239113,51687129717340,25843564858670,12921782429335,38765347288006,19382673644003,58148020932010,29074010466005,87222031398016,43611015699008,21805507849504,10902753924752,5451376962376,2725688481188,1362844240594,681422120297,2044266360892,1022133180446,511066590223,1533199770670,766599885335,2299799656006,1149899828003,3449699484010,1724849742005,5174549226016,2587274613008,1293637306504,646818653252,323409326626,161704663313,485113989940,242556994970,121278497485,363835492456,181917746228,90958873114,45479436557,136438309672,68219154836,34109577418,17054788709,51164366128,25582183064,12791091532,6395545766,3197772883,9593318650,4796659325,14389977976,7194988988,3597494494,1798747247,5396241742,2698120871,8094362614,4047181307,12141543922,6070771961,18212315884,9106157942,4553078971,13659236914,6829618457,20488855372,10244427686,5122213843,15366641530,7683320765,23049962296,11524981148,5762490574,2881245287,8643735862,4321867931,12965603794,6482801897,19448405692,9724202846,4862101423,14586304270,7293152135,21879456406,10939728203,32819184610,16409592305,49228776916,24614388458,12307194229,36921582688,18460791344,9230395672,4615197836,2307598918,1153799459,3461398378,1730699189,5192097568,2596048784,1298024392,649012196,324506098,162253049,486759148,243379574,121689787,365069362,182534681,547604044,273802022,136901011,410703034,205351517,616054552,308027276,154013638,77006819,231020458,115510229,346530688,173265344,86632672,43316336,21658168,10829084,5414542,2707271,8121814,4060907,12182722,6091361,18274084,9137042,4568521,13705564,6852782,3426391,10279174,5139587,15418762,7709381,23128144,11564072,5782036,2891018,1445509,4336528,2168264,1084132,542066,271033,813100,406550,203275,609826,304913,914740,457370,228685,686056,343028,171514,85757,257272,128636,64318,32159,96478,48239,144718,72359,217078,108539,325618,162809,488428,244214,122107,366322,183161,549484,274742,137371,412114,206057,618172,309086,154543,463630,231815,695446,347723,1043170,521585,1564756,782378,391189,1173568,586784,293392,146696,73348,36674,18337,55012,27506,13753,41260,20630,10315,30946,15473,46420,23210,11605,34816,17408,8704,4352,2176,1088,544,272,136,68,34,17,52,26,13,40,20,10,5,16,8,4,2,1"
	assert obtenerSecuenciaCollatz(valor) == comparar_seq

# Valor input : 6
# Resultado esperado : Devuelve OK secuencia correspondiente...
def test_method_2():
	valor = 6
	comparar_seq = "6,3,10,5,16,8,4,2,1"
	assert obtenerSecuenciaCollatz(valor) == comparar_seq


# Valor input : '09' (String comienza con cero)
# Resultado esperado : Devuelve OK secuencia correspondiente...
def test_method_3():
	valor = '09'
	comparar_seq = "9,28,14,7,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,1"
	assert obtenerSecuenciaCollatz(valor) == comparar_seq


# Valor input : 22.15234 (Número doble)
# Resultado esperado : Devolver error de input inválido... 
def test_method_4():
	valor = 22.15234
	assert obtenerSecuenciaCollatz(valor) == msg_error_val


# Valor input : 0
# Resultado esperado : Devolver error de input inválido... 
def test_method_5():
	valor = 0
	assert obtenerSecuenciaCollatz(valor) == msg_error_val


# Valor input : -21 (Valor negativo)
# Resultado esperado : Devolver error de input inválido.. 
def test_method_6():
	valor = -21
	assert obtenerSecuenciaCollatz(valor) == msg_error_zero


# Valor input : [Cadena de texto, una palabra]
# Resultado esperado : Devolver error de input inválido... 
def test_method_7():
	valor = "Probando"
	assert obtenerSecuenciaCollatz(valor) == msg_error_val


# Valor input : [Cadena de texto, varias palabras, caracteres especiales, espacios, etc]
# Resultado esperado : Devolver error de input inválido... 
def test_method_8():
	valor = "     123      Hola mundo, #@$/:.-url_url_url/4-hola-mundo/56/7(8(xD"
	assert obtenerSecuenciaCollatz(valor) == msg_error_val






